{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,uCCLjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAOF,GAFP,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCDRO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAW,2DAAhB,UACI,qBAAKC,IAAKjB,EAAKkB,IAAQR,IACvB,4BAAIA,QCDHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAIrB,ECPwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLe,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA2BA,OApBAC,qBAAU,WAEN1B,EAAQC,GAEH0B,MAAK,SAAAC,GAEEH,EAAS,CACLjB,KAAKoB,EACLL,SAAS,SAQ3B,CAACtB,IAIIuB,EDtBwBK,CAAa5B,GAAhCa,EAAZ,EAAON,KAAae,EAApB,EAAoBA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,sDAAd,SAAsElB,IAErEsB,GAAW,mBAAGJ,UAAW,sDAAd,qBAEZ,qBAAKA,UAAU,YAAf,SAIYL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aErB5BkB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAYA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCrBjC+B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf691f5c.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange =(e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats =>[ inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n    \r\n        \r\n    }\r\n\r\n    return (\r\n     \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\n\r\nexport  const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fp8XV4uhFTHCTHJlN8CpTN2yl26Bky2z`;\r\n    const resp =  await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url);\r\n    return (\r\n        <div className =\"card animate__animated animate__bounce animate__delay-2s\">\r\n            <img src={url} alt = { title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { getFCP } from 'web-vitals';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   \r\n\r\n    const {data:images ,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce animate__delay-2s\" >{category}</h3>\r\n\r\n            {loading && <p className =\"animate__animated animate__bounce animate__delay-2s\" >Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                    {\r\n                        images.map(img =>(\r\n                            <GifGridItem\r\n                                key={img.id} \r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }               \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    \r\n    useEffect(() =>{\r\n\r\n        getGifs(category)\r\n\r\n            .then(imgs => {\r\n                \r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                \r\n\r\n            \r\n        })\r\n\r\n    },[category]) \r\n    \r\n    \r\n\r\n    return state; \r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () =>{\r\n    //const categories =['One Punch','Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n\r\n\r\n    //const handleAdd=()=>{\r\n    //   setcategories(['HunterXHunter', ...categories] );\r\n    //\r\n    //   \r\n    //}\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories ={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid   \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n  \n\n"],"sourceRoot":""}